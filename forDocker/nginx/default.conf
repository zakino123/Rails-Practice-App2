# upstreameでpumaグループを定義、個々のサーバーに　app:3000を設定
upstream puma {
  server app:3000;
}

server {
  # デフォルトでは、 Nginx HTTP サーバーは受信接続を待機し、標準のWebポートを表すポート 80 にバインドする。
  listen 80;
  # ホスト名を指定
  server_name localhost;

  #access_logとerror_ログのパス指定
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  # ドキュメントルートを指定
  root /app/public;

  # locationはURI毎に異なる設定をできるようにする
  location @puma {
    # プロキシーサーバに送られるリクエストヘッダの フィールドを再定義、あるいは追加する。
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    # リクエストをHTTP プロキシされたサーバに送る
    proxy_pass http://puma;
  }

  location / {
    # 左から順に実体ファイルが存在しているかどうかを探し、あればそのままそのファイルを参照してくれる
    try_files $uri @puma;
  }

  location ~ ^/(assets|packs)/ {
    # 圧縮していない物を圧縮し、既に圧縮済みのファイル(e.g. xxx.js.gz)があればそれをそのまま配信する
    gzip_static on;
    # クライアントキャッシュの有効期限設定
    expires max;
    # 下位のレベル(location)にadd_headerを設定した場合、上位のレベル(server)のadd_headerは破棄される
    # 拡張子 gif、jpeg、jpg、png、ico、svg、css、jsのファイルをキャッシュする
    add_header Cache-Control public;
  }

  location = /favicon.ico {
    # アクセスログ、エラーログを捨てる
    access_log off;
    log_not_found off;
  }
    
  location = /robots.txt  {
    access_log off;
    log_not_found off;
  }

  # エラーページを作成
  error_page 404 /404.html;
  location = /404.html {
  }

  error_page 500 502 503 504 /50x.html;
  location = /500.html {
  }
}